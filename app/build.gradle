plugins {
    id 'application'
    id 'checkstyle'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'io.ebean' version '13.6.5'
    id 'jacoco'
}

group 'hexlet.code'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.javalin:javalin:5.5.0'
    implementation 'io.javalin:javalin-rendering:5.5.0'
    implementation 'org.slf4j:slf4j-simple:2.0.5'

    implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.webjars:bootstrap:5.2.3'

    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.postgresql:postgresql:42.5.4'

    implementation 'io.ebean:ebean:13.15.0'
    implementation 'io.ebean:ebean-ddl-generator:13.15.0'
    implementation 'io.ebean:ebean-querybean:12.15.1'
    implementation 'io.ebean:ebean-migration:13.7.0'
    implementation 'io.ebean:ebean-annotation:8.3'
    testImplementation 'org.testng:testng:7.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    annotationProcessor 'io.ebean:querybean-generator:13.15.0'


    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'javax.activation:activation:1.1.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.assertj:assertj-core:3.24.0'
    testImplementation 'io.ebean:ebean-test:13.15.0'
    testImplementation 'com.konghq:unirest-java:3.14.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

//compileJava {
//    options.release = 20
//}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

checkstyle {
    toolVersion '10.12.1'
    configFile = rootProject.file("${rootDir}/config/checkstyle/checkstyle.xml")
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

testlogger {
    showStandardStreams true
}

application {
    mainClass = 'hexlet.code.App'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}

sourceSets.main.java.srcDirs = ['src/main/java', 'build/generated/sources/annotationProcessor/java/main']